# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/18_envconfig.ipynb.

# %% auto 0
__all__ = ['settings', 'Settings']

# %% ../nbs/18_envconfig.ipynb 6
# from jose import JWTError, jwt
# from datetime import datetime, timedelta
# import aishiftscheduler.schemas as sch
# import aishiftscheduler.database as db
# import aishiftscheduler.dbmodels as dbm
# from fastapi import Depends, status, HTTPException
# from fastapi.security import OAuth2PasswordBearer
# from sqlalchemy.orm import Session

# oauth2_scheme = OAuth2PasswordBearer(tokenUrl="login")

# # import aishiftscheduler.dbmodels as dbm
# # import aishiftscheduler.schemas as sch
# # import aishiftscheduler.utils as utl
# # from aishiftscheduler.database import get_db

# %% ../nbs/18_envconfig.ipynb 7
# from pydantic import BaseSettings
from pydantic_settings import BaseSettings, SettingsConfigDict
import os


# class Settings(BaseSettings):
#     database_hostname: str = "localhost"
#     database_username: str = "postgres"
#     secret_key: str = "123jklj902734789df"

class Settings(BaseSettings):
    database_hostname: str
    database_port: str
    database_password: str
    database_name: str
    database_username: str
    secret_key: str
    algorithm: str
    access_token_expire_minutes: str

    class Config:
        #- env_file = "../.env"
        env_file = ".env"

    # model_config = SettingsConfigDict(env_file="../.env")
    # model_config = SettingsConfigDict(env_file="./.env")

settings = Settings()
# print(os.getcwd())
# model_config = SettingsConfigDict(env_file="../.env")
# model_config = SettingsConfigDict(env_file=".env")
# print(model_config)
# print(settings.database_password)
