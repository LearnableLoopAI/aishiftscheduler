# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/14_schemas.ipynb.

# %% auto 0
__all__ = ['UserCreate', 'UserOut', 'UserInputBase', 'UserInputCreate', 'UserInputUpdate', 'UserInput', 'UserLogin', 'Token',
           'TokenData']

# %% ../nbs/14_schemas.ipynb 7
from pydantic import BaseModel, EmailStr, ConfigDict
from datetime import datetime
from typing import Optional

# %% ../nbs/14_schemas.ipynb 8
class UserCreate(BaseModel):
    email: EmailStr
    password: str
#| export
class UserOut(BaseModel):
    id: int
    email: EmailStr
    created_at: datetime

    class Config:
        # orm_mode = True
        from_attributes = True

# %% ../nbs/14_schemas.ipynb 9
class UserInputBase(BaseModel):
    start: str
    slots_per_day: int
    max_daily_slot_run: int
    resources: str
    demands_per_busyness: str
    demands_per_volume: str
    demands_per_revenue: str
    resource_expenses: str

# %% ../nbs/14_schemas.ipynb 10
class UserInputCreate(UserInputBase):
    pass

# %% ../nbs/14_schemas.ipynb 11
class UserInputUpdate(UserInputBase):
    pass

# %% ../nbs/14_schemas.ipynb 12
## response model
class UserInput(UserInputBase):
    id: int
    created_at: datetime
    user_id: int
    user: UserOut

    class Config:
        # orm_mode = True
        from_attributes = True

# %% ../nbs/14_schemas.ipynb 13
class UserLogin(BaseModel):
    email: EmailStr
    password: str

# %% ../nbs/14_schemas.ipynb 14
class Token(BaseModel):
    access_token: str
    token_type: str

# %% ../nbs/14_schemas.ipynb 15
class TokenData(BaseModel):
    model_config = ConfigDict(coerce_numbers_to_str=True)
    id: Optional[str] = None
